{"remainingRequest":"C:\\Users\\wusongming\\Desktop\\吴智杰\\宠物领养系统\\源码\\pet_qiantai\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\wusongming\\Desktop\\吴智杰\\宠物领养系统\\源码\\pet_qiantai\\src\\views\\front\\Order.vue?vue&type=style&index=0&id=16ae739e&scoped=true&lang=css","dependencies":[{"path":"C:\\Users\\wusongming\\Desktop\\吴智杰\\宠物领养系统\\源码\\pet_qiantai\\src\\views\\front\\Order.vue","mtime":1741492750838},{"path":"C:\\Users\\wusongming\\Desktop\\吴智杰\\宠物领养系统\\源码\\pet_qiantai\\node_modules\\css-loader\\dist\\cjs.js","mtime":1737881596144},{"path":"C:\\Users\\wusongming\\Desktop\\吴智杰\\宠物领养系统\\源码\\pet_qiantai\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1737881598950},{"path":"C:\\Users\\wusongming\\Desktop\\吴智杰\\宠物领养系统\\源码\\pet_qiantai\\node_modules\\postcss-loader\\src\\index.js","mtime":1737881596981},{"path":"C:\\Users\\wusongming\\Desktop\\吴智杰\\宠物领养系统\\源码\\pet_qiantai\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1737881601770},{"path":"C:\\Users\\wusongming\\Desktop\\吴智杰\\宠物领养系统\\源码\\pet_qiantai\\node_modules\\vue-loader\\lib\\index.js","mtime":1737881597607}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQovKiDkuLogYm9keSDorr7nva7og4zmma/popzoibIgKi8NCmJvZHkgew0KICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjRmNGY0OyAvKiDov5nph4zlj6/ku6XmoLnmja7pnIDopoHkv67mlLnog4zmma/popzoibIgKi8NCiAgbWFyZ2luOiAwOw0KICBwYWRkaW5nOiAwOw0KfQ0KDQoub3JkZXItcGFnZSB7DQogIGZvbnQtZmFtaWx5OiBBcmlhbCwgc2Fucy1zZXJpZjsNCiAgcGFkZGluZzogMjBweDsNCiAgbWF4LXdpZHRoOiA4MDBweDsgLyog6YCC5b2T5aKe5Yqg5a695bqmICovDQogIG1hcmdpbjogMCBhdXRvOw0KICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsgLyog6K6+572u5Li66YCP5piO6IOM5pmvICovDQogIC8qIOiuvue9ruacgOWwj+mrmOW6pu+8jOehruS/neiDjOaZr+iJsuimhuebluS4gOWumuiMg+WbtCAqLw0KICBtaW4taGVpZ2h0OiBjYWxjKDEwMHZoIC0gNDBweCk7IA0KfQ0KDQoucGFnZS10aXRsZSB7DQogIHRleHQtYWxpZ246IGNlbnRlcjsNCiAgY29sb3I6ICMzMzM7DQogIG1hcmdpbi1ib3R0b206IDMwcHg7DQogIGZvbnQtc2l6ZTogMjhweDsgLyog5aKe5aSn5qCH6aKY5a2X5L2T5aSn5bCPICovDQogIGFuaW1hdGlvbjogZmFkZUluRG93biAxcyBlYXNlOyAvKiDmt7vliqDmoIfpopjliqjnlLsgKi8NCn0NCg0KQGtleWZyYW1lcyBmYWRlSW5Eb3duIHsNCiAgZnJvbSB7DQogICAgb3BhY2l0eTogMDsNCiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTIwcHgpOw0KICB9DQogIHRvIHsNCiAgICBvcGFjaXR5OiAxOw0KICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTsNCiAgfQ0KfQ0KDQoub3JkZXItcmVjb3JkIHsNCiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsNCiAgYm9yZGVyLXJhZGl1czogMTBweDsNCiAgYm94LXNoYWRvdzogMCAwIDEwcHggcmdiYSgwLCAwLCAwLCAwLjEpOw0KICBwYWRkaW5nOiAzMHB4Ow0KICBtYXJnaW4tYm90dG9tOiAyMHB4OyAvKiDlop7liqDorqLljZXorrDlvZXkuYvpl7TnmoTpl7Tot50gKi8NCiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTsgLyog5re75Yqg6L+H5rih5Yqo55S7ICovDQp9DQoNCi5vcmRlci1yZWNvcmQuaG92ZXJlZCB7DQogIHRyYW5zZm9ybTogc2NhbGUoMS4wMik7IC8qIOm8oOagh+aCrOWBnOaXtuaUvuWkpyAqLw0KICBib3gtc2hhZG93OiAwIDAgMjBweCByZ2JhKDAsIDAsIDAsIDAuMik7IC8qIOm8oOagh+aCrOWBnOaXtuWinuWKoOmYtOW9sSAqLw0KfQ0KDQoucmVjb3JkLWl0ZW0gew0KICBkaXNwbGF5OiBmbGV4Ow0KICBhbGlnbi1pdGVtczogY2VudGVyOw0KICBtYXJnaW4tYm90dG9tOiAxNXB4OyAvKiDlop7liqDorrDlvZXpobnkuYvpl7TnmoTpl7Tot50gKi8NCn0NCg0KLnJlY29yZC1sYWJlbCB7DQogIHdpZHRoOiAxNTBweDsgLyog6YCC5b2T5aKe5Yqg5qCH562+5a695bqmICovDQogIGZvbnQtd2VpZ2h0OiBib2xkOw0KICBjb2xvcjogIzU1NTsNCiAgZm9udC1zaXplOiAxNnB4OyAvKiDlop7lpKfmoIfnrb7lrZfkvZPlpKflsI8gKi8NCn0NCg0KLnJlY29yZC12YWx1ZSB7DQogIGNvbG9yOiAjMzMzOw0KICBmb250LXNpemU6IDE2cHg7IC8qIOWinuWkp+WAvOWtl+S9k+Wkp+WwjyAqLw0KfQ0K"},{"version":3,"sources":["Order.vue"],"names":[],"mappings":";AAkFA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Order.vue","sourceRoot":"src/views/front","sourcesContent":["<template>\r\n  <div class=\"order-page\">\r\n    <h1 class=\"page-title\">订单记录</h1>\r\n    <div class=\"order-record\" v-for=\"(order, id) in userOrder\" :key=\"id\" @mouseenter=\"onMouseEnter(id)\" @mouseleave=\"onMouseLeave(id)\" :class=\"{ 'hovered': hoveredIndex === id }\">\r\n      <!-- 姓名 -->\r\n      <div class=\"record-item\">\r\n        <span class=\"record-label\">姓名</span>\r\n        <span class=\"record-value\">{{ order.name || '暂无信息' }}</span>\r\n      </div>\r\n      <!-- 地点 -->\r\n      <div class=\"record-item\">\r\n        <span class=\"record-label\">地点</span>\r\n        <span class=\"record-value\">{{ order.location || '暂无信息' }}</span>\r\n      </div>\r\n      <!-- 备注 -->\r\n      <div class=\"record-item\">\r\n        <span class=\"record-label\">备注</span>\r\n        <span class=\"record-value\">{{ order.petInfo || '暂无信息' }}</span>\r\n      </div>\r\n      <!-- 上门时间 -->\r\n      <div class=\"record-item\">\r\n        <span class=\"record-label\">上门时间</span>\r\n        <span class=\"record-value\">{{ order.timeRange || '暂无信息' }}</span>\r\n      </div>\r\n      <!-- 选择的服务 -->\r\n      <div class=\"record-item\">\r\n        <span class=\"record-label\">选择的服务</span>\r\n        <span class=\"record-value\">{{ order.serviceTitle || '暂无信息' }}</span>\r\n      </div>\r\n      <!-- 完成状态 -->\r\n      <div class=\"record-item\">\r\n        <span class=\"record-label\">完成状态</span>\r\n        <span class=\"record-value\" v-if=\"order.status === 'COMPLETED'\">已完成</span>\r\n        <span class=\"record-value\" v-else>未完成</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\n// 假设这里引入了 axios 作为请求库\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: \"order\",\r\n  data() {\r\n    return {\r\n      userOrder: [],\r\n      hoveredIndex: null\r\n    }\r\n  },\r\n  created() {\r\n    this.getData();\r\n  },\r\n  methods: {\r\n    async getData() {\r\n      const userData = localStorage.getItem('user');\r\n      if (userData) {\r\n        const user = JSON.parse(userData);\r\n        console.log(user);\r\n        const token = user.token;\r\n        try {\r\n          const res = await axios.get('http://localhost:9090/bookings/byUsername', { params: { name: user.username }, headers: {\r\n            token: token\r\n          } });\r\n          console.log(res.data);\r\n          // 将获取到的数据更新到组件状态\r\n          this.userOrder = res.data;\r\n        } catch (error) {\r\n          console.error('获取订单数据失败:', error);\r\n        }\r\n      }\r\n    },\r\n    onMouseEnter(index) {\r\n      this.hoveredIndex = index;\r\n    },\r\n    onMouseLeave() {\r\n      this.hoveredIndex = null;\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n/* 为 body 设置背景颜色 */\r\nbody {\r\n  background-color: #f4f4f4; /* 这里可以根据需要修改背景颜色 */\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.order-page {\r\n  font-family: Arial, sans-serif;\r\n  padding: 20px;\r\n  max-width: 800px; /* 适当增加宽度 */\r\n  margin: 0 auto;\r\n  background-color: transparent; /* 设置为透明背景 */\r\n  /* 设置最小高度，确保背景色覆盖一定范围 */\r\n  min-height: calc(100vh - 40px); \r\n}\r\n\r\n.page-title {\r\n  text-align: center;\r\n  color: #333;\r\n  margin-bottom: 30px;\r\n  font-size: 28px; /* 增大标题字体大小 */\r\n  animation: fadeInDown 1s ease; /* 添加标题动画 */\r\n}\r\n\r\n@keyframes fadeInDown {\r\n  from {\r\n    opacity: 0;\r\n    transform: translateY(-20px);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n}\r\n\r\n.order-record {\r\n  background-color: #fff;\r\n  border-radius: 10px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n  padding: 30px;\r\n  margin-bottom: 20px; /* 增加订单记录之间的间距 */\r\n  transition: all 0.3s ease; /* 添加过渡动画 */\r\n}\r\n\r\n.order-record.hovered {\r\n  transform: scale(1.02); /* 鼠标悬停时放大 */\r\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.2); /* 鼠标悬停时增加阴影 */\r\n}\r\n\r\n.record-item {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 15px; /* 增加记录项之间的间距 */\r\n}\r\n\r\n.record-label {\r\n  width: 150px; /* 适当增加标签宽度 */\r\n  font-weight: bold;\r\n  color: #555;\r\n  font-size: 16px; /* 增大标签字体大小 */\r\n}\r\n\r\n.record-value {\r\n  color: #333;\r\n  font-size: 16px; /* 增大值字体大小 */\r\n}\r\n</style>\r\n"]}]}